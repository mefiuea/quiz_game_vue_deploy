{"version":3,"file":"js/app.9f028baa.js","mappings":"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","sources":["webpack://quiz_game_vue/./src/App.vue","webpack://quiz_game_vue/./src/App.vue?7ccd","webpack://quiz_game_vue/./src/main.js","webpack://quiz_game_vue/webpack/bootstrap","webpack://quiz_game_vue/webpack/runtime/chunk loaded","webpack://quiz_game_vue/webpack/runtime/compat get default export","webpack://quiz_game_vue/webpack/runtime/define property getters","webpack://quiz_game_vue/webpack/runtime/global","webpack://quiz_game_vue/webpack/runtime/hasOwnProperty shorthand","webpack://quiz_game_vue/webpack/runtime/jsonp chunk loading","webpack://quiz_game_vue/webpack/startup"],"sourcesContent":["<template>\n  <body>\n  <!--START view-->\n  <div class=\"flex w-full h-screen justify-center items-center\" v-if=\"isStart === false\">\n    <div class=\"w-full max-w-xl text-center\">\n      <div class=\"flex-1 bg-white p-12 rounded-lg shadow-lg w-full mt-8 justify-center items-center\">\n        <button\n            class=\"px-2 py-2 myButton align-super\"\n            style=\"width: 200px; height: 100px;\"\n            v-on:click=\"fetchData()\"\n            v-if=\"isLoading === false && isErrorDuringFetch === false\"\n        >\n          START\n        </button>\n        <div v-if=\"isLoading === true && isErrorDuringFetch === false\">loading questions...</div>\n        <div v-if=\"isLoading === false && isErrorDuringFetch === true\">Failed to load questions. Something went wrong.\n        </div>\n        <p class=\"font-bold mt-4 mb-2\">Select number of questions</p>\n        <div class=\"flex justify-center\">\n          <div\n              class=\"text-white font-bold py-2 px-4 rounded m-3 select-number\"\n              v-bind:class=\"{'text-green-400' : selectedNumberOfQuestions === 5}\"\n              v-on:click=\"selectedNumberOfQuestions = 5\"\n          >\n            5\n          </div>\n          <div\n              class=\"text-white font-bold py-2 px-4 rounded m-3 select-number\"\n              v-bind:class=\"{'text-green-400' : selectedNumberOfQuestions === 10}\"\n              v-on:click=\"selectedNumberOfQuestions = 10\"\n          >\n            10\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!--questions view-->\n  <div class=\"flex w-full h-screen justify-center items-center\" v-if=\"isStart === true && isFinish === false\">\n    <div class=\"w-full max-w-xl\">\n      <h1 class=\"font-bold text-5xl text-center quiz-text\">Quiz game</h1>\n      <!--question and answer and results container-->\n      <div class=\"bg-white p-12 rounded-lg shadow-lg w-full mt-8\">\n        <!--display div with questions-->\n        <div v-if=\"questionIndex-1 < questionCounter\">\n          <p v-if=\"questions.length > 0\" class=\"text-2xl font-bold\" v-html=\"questions[questionIndex - 1].question\"></p>\n          <!--<p v-if=\"questions.length > 0\" class=\"text-2xl font-bold\">{{ questions[questionIndex - 1].question }}</p>-->\n          <div\n              v-for=\"answer in questions[questionIndex-1].choices\"\n              class=\"block mt-4 border border-gray-300 rounded-lg py-2 px-6 text-lg option-default answer-option\"\n              v-bind:key=\"answer\"\n              v-on:click=\"selectedAnswerFunction($event)\"\n              v-on:mouseover=\"hoverClassOn($event)\"\n              v-on:mouseout=\"hoverClassOff($event)\"\n              v-bind:class=\"{'option-selected': selectedAnswersDictionary[questionIndex] === answer}\"\n              v-html=\"answer\"\n          ></div>\n          <!--progress status-->\n          <div class=\"mt-8 text-center\">\n            <div class=\"flex justify-center items-center\">\n              <span class=\"text-black text-xs\">Saved questions</span>\n            </div>\n            <div class=\"mb-4 w-full h-1 bg-gray-200 rounded-full dark:bg-gray-700\">\n              <div class=\"h-1 bg-yellow-500 font-medium text-blue-100 rounded-full\"\n                   :style=\"{width: widthProgress + '%'}\"></div>\n            </div>\n            <p>Question: {{ questionIndex }}/{{ questionCounter }}</p>\n          </div>\n          <!--next question button-->\n          <div class=\"mt-6 flow-root\">\n            <button\n                class=\"float-right px-5 py-2 myButton\"\n                v-show=\"questionIndex - 1 < questionCounter - 1\"\n                :disabled=\"selectedAnswer === undefined || selectedAnswer === ''\"\n                v-on:click=\"timer(); nextQuestion()\"\n            >\n              Next &gt;\n            </button>\n            <!--previous question button-->\n            <button\n                class=\"float-left px-5 py-2 myButton\"\n                v-show=\"questionIndex - 1 >= 0\"\n                :disabled=\"questionIndex - 1 === 0\"\n                v-on:click=\"timer(); previousQuestion()\"\n            >\n              &lt; Previous\n            </button>\n            <!--finish quiz button-->\n            <button\n                class=\"float-right px-5 py-2 myButton\"\n                v-show=\"questionIndex - 1 === questionCounter - 1\"\n                :disabled=\"selectedAnswer === undefined || selectedAnswer === ''\"\n                v-on:click=\"timer(); showResults()\"\n            >\n              Finish\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!--results view-->\n  <div class=\"flex w-full justify-center items-center\" v-if=\"isStart === true && isFinish === true\">\n    <div class=\"w-full max-w-xl\">\n      <div class=\"bg-white p-12 rounded-lg shadow-lg w-full mt-8 mb-8\">\n        <div class=\"font-bold text-5xl text-center mb-10\">Results:</div>\n        <!--chart with correct/wrong answers-->\n        <p class=\"text-center font-bold text-2xl\">Correct/wrong answers</p>\n        <div class=\"chart-container\">\n          <canvas id=\"myChartQuestionsResults\" width=\"400\" height=\"400\"></canvas>\n        </div>\n        <div class=\"font-bold text-xl text-center mb-10 mt-5\">Correct answers: {{this.correctAnswers }}/{{ this.questionCounter }}\n        </div>\n        <!--chart with time spent for answers-->\n        <p class=\"text-center font-bold text-2xl\">Time spent for each question [s]</p>\n        <div class=\"chart-container\">\n          <canvas id=\"myChartTimeResults\" width=\"400\" height=\"400\"></canvas>\n        </div>\n        <div class=\"font-bold text-xl text-center mb-10 mt-5\">Total time: {{ this.timerGlobalDelta }} [s]</div>\n        <!--results - questions-->\n        <div class=\"mb-16 relative\" v-for=\"(question, idx) in questions\" v-bind:key=\"question\">\n          <div class=\"bg-blue-400 p-1 transform rotate-45 rounded-md h-10 w-10 text-white font-bold text-center\n          absolute right-0 -top-8 shadow-2xl question\">\n            <p class=\"transform -rotate-45\">q{{ idx + 1 }}</p>\n          </div>\n          <p class=\"font-bold text-3xl text-center bg-red-200 bg-opacity-50 rounded p-2 m-2\"\n             v-bind:class=\"{'bg-green-200 bg-opacity-50 rounded p-2 m-2': question.correctAnswer === selectedAnswersDictionary[idx + 1]}\"\n             v-html=\"question.question\"\n          ></p>\n          <p class=\"border-yellow-500 border-2 rounded-full p-2 m-2 font-bold\">Your answer: <span\n              class=\"font-light text-2xl\" v-html=\"selectedAnswersDictionary[idx + 1]\"></span></p>\n          <p class=\"border-green-500 border-2 rounded-full p-2 m-2 font-bold\">Correct answer: <span\n              class=\"font-light text-2xl\" v-html=\"question.correctAnswer\"></span></p>\n        </div>\n      </div>\n    </div>\n  </div>\n  </body>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      isHovering: false,  // variable to indicate if user has hovered the mouse over the answer\n      selectedAnswer: '',  // variable to store actual selected answer\n      selectedAnswersDictionary: {},  // dictionary to collect all answers from user depending on question number\n      questionIndex: 1,  // actual question number\n      questionCounter: 0,  // total number of questions\n      widthProgress: 0,  // progress bar width - using in style\n      correctAnswers: 0,  // counter for correct answers\n      wrongAnswers: 0,  // counter for wrong answers\n      timerGlobalStart: 0,  // timer to count total time for whole quiz - run right after all data from external api are collected\n      timerGlobalStop: 0,  // variable to store time after click finish button\n      timerGlobalDelta: 0,  // variable to store time difference between timerGlobalStop and timerGlobalStart\n      timerStart: 0,  // variable to store time every time when next or previous button is clicked - used in timer() function\n      actualTime: 0,  // variable to store time - corresponding with timerStart variable\n      timerDelta: 0,  // variable to store difference between actualTimer and timerStart\n      timerQuestionDictionary: {},  // dictionary to store time for each specific question\n      isStart: false,  // variable to check if start button was clicked - after this quiz is starting\n      isFinish: false,  // variable to check if finish button was clicked - after this results are shown\n      questions: [],  // array to store dictionaries with questions-answers-correct answer\n      isLoading: false,  // change status to true if start button is pressed\n      isErrorDuringFetch: false,  // indicates an error - render new view with information\n      startGenerateChart: false,  // variable indicating when to start generating charts - used in showResults()/updated\n      selectedNumberOfQuestions: 5,  // variable on first view - allows to choose number of questions - default 5\n    }\n  },\n  methods: {\n    fetchData() {\n      /**\n       * Function to get data from external api.\n       * In addition, setting the launch variables.\n       * Started when the START button is pressed.\n       */\n\n          // creating query string\n      let params = new URLSearchParams();\n      params.append('amount', this.selectedNumberOfQuestions.toString())\n      const apiUrl = 'https://opentdb.com/api.php?' + params.toString();\n\n      // this variable change view to loading view on START page\n      this.isLoading = true\n\n      // send request to external api. Catch errors when it is not possible to get data from external api.\n      const request = async () => {\n        try {\n          const response = await fetch(apiUrl).catch(function (error) {\n            console.log('Problems: ', error)\n          });\n          console.log(response);\n          console.log('response status: ', response.status);\n          const data = await response.json();\n          console.log('data: ', data.results);\n          this.prepareQuestions(data);\n        } catch (err) {\n          console.error('MyError: ', err)\n          this.isLoading = false\n          this.isErrorDuringFetch = true\n          throw err\n        }\n      }\n      request();\n\n    },\n    prepareQuestions(data) {\n      /**\n       * Function called when data from external api has been successfully retrieved.\n       * In addition, setting the launch variables.\n       * Function call inside fetchData().\n       */\n\n      // copy data from external api to my dictionary 'questions'\n      for (let i = 0; i < data.results.length; i++) {\n        const dict = {\n          question: data.results[i].question,\n          choices: data.results[i].incorrect_answers,\n          correctAnswer: data.results[i].correct_answer,\n        }\n        dict.choices.push(data.results[i].correct_answer)\n        dict.choices = this.shuffle(dict.choices)\n        this.questions.push(dict)\n      }\n\n      // console.log('questions: ', this.questions)\n\n      // update total number of questions\n      this.questionCounter = this.questions.length;\n\n      // allow to generate view with questions - after all data is download from external api\n      this.isStart = true;\n\n      // create timer dictionary and fill with empty numbers\n      for (let i = 1; i < this.questions.length + 1; i++) {\n        this.timerQuestionDictionary[i] = 0;\n      }\n\n      //start timers\n      this.timerGlobalStart = Date.now();\n      this.timerStart = Date.now();\n\n    },\n    selectedAnswerFunction(event) {\n      /**\n       * Function save selected answer to a variable and adds it to dictionary.\n       * In addition, it updates progress bar.\n       * Function called when any answer under a given question is selected (click event).\n       */\n\n      // assigning content of answer to a variable\n      this.selectedAnswer = event.target.innerText;\n      // console.log(this.selectedAnswer = event.target.innerText)\n\n      // add selected answer to dictionary depending on question index\n      this.selectedAnswersDictionary[this.questionIndex] = this.selectedAnswer;\n      // console.log(this.selectedAnswersDictionary)\n\n      // update progress bar\n      this.updateProgressBar()\n    },\n    hoverClassOn(event) {\n      /**\n       * Function changes class of answer container when mouse hovers it.\n       */\n\n      this.isHovering = true\n      event.target.classList.add('option-hover')\n    },\n    hoverClassOff(event) {\n      /**\n       * Function changes class of answer container when mouse hovers it.\n       */\n\n      this.isHovering = false\n      event.target.classList.remove('option-hover')\n    },\n    nextQuestion() {\n      /**\n       * Function to scroll through views with questions. Shows new question.\n       * Function called when next question button is pressed.\n       */\n\n      // increment question number\n      this.questionIndex++;\n\n      // reset selected answer\n      // this.selectedAnswer = '';\n\n      // save value from dictionary to selected answer\n      this.selectedAnswer = this.selectedAnswersDictionary[this.questionIndex]\n\n      // show debug information in browser console\n      this.info()\n    },\n    previousQuestion() {\n      /**\n       * Function to scroll through views with questions. Shows previous question.\n       * Function called when next question button is pressed.\n       */\n\n      // decrement question number\n      this.questionIndex--;\n\n      // reset selected answer\n      // this.selectedAnswer = '';\n\n      // check what answer was selected in specific question depending on question index and answered question dictionary\n      // based on this data - update selectedAnswer variable\n      this.selectedAnswer = this.selectedAnswersDictionary[this.questionIndex]\n\n      // show debug information in browser console\n      this.info()\n\n      // update progress bar\n      // this.updateProgressBar()\n    },\n    showResults() {\n      /**\n       * Function to set variables before displaying results.\n       * Function called when finish button is pressed.\n       */\n\n      // this.questionIndex++;\n\n      // variable to allows to generate results view\n      this.isFinish = true;\n\n      // show debug information in browser console\n      this.info();\n\n      // compare correct answers (questions dictionary) with answers selected by user (selectedAnswersDictionary dictionary)\n      // changing the counters of correct and wrong answers\n      for (let i = 0; i < this.questions.length; i++) {\n        if (this.questions[i].correctAnswer === this.selectedAnswersDictionary[i + 1]) {\n          this.correctAnswers++\n        } else {\n          this.wrongAnswers++\n        }\n      }\n      console.log('Correct answers = ', this.correctAnswers)\n      console.log('Wrong answers = ', this.wrongAnswers)\n\n      // calculate total time\n      // save actual global time\n      this.timerGlobalStop = Date.now()\n\n      // calculate difference between global timer start and stop and convert to seconds\n      this.timerGlobalDelta = Math.floor((this.timerGlobalStop - this.timerGlobalStart) / 1000)\n\n      // set startGenerateChart to true - variable used in updated functions - indicates when charts can be generated\n      this.startGenerateChart = true;\n    },\n    // static methods\n    updateProgressBar() {\n      /**\n       * Function to change width parameter in css style.\n       */\n\n      // variable used in 'progress status' view. Variable is based on length of dictionary of selected answers,\n      // not on actual question number (question index)\n      this.widthProgress = (Object.keys(this.selectedAnswersDictionary).length / this.questionCounter) * 100;\n    },\n    timer() {\n      /**\n       * Function to start and stop timer for specific question and save timer results to dictionary depending on\n       * actual question number (question index).\n       * Function called when next, previous, finish buttons are clicked.\n       */\n\n      // save actual time (like stop timer)\n      this.actualTime = Date.now()\n\n      // calculate difference time between moment when new or previous question appears and clicked next or previous button\n      this.timerDelta = this.actualTime - this.timerStart\n\n      // save data to dictionary\n      // add selected answer to dictionary depending on question index\n      this.timerQuestionDictionary[this.questionIndex] += Math.floor(this.timerDelta / 1000)\n\n      // save actual time (start timer)\n      this.timerStart = Date.now()\n    },\n    shuffle(arr) {\n      /**\n       * Function to randomize word position in correct answers array this.questions.correctAnswer.\n       */\n\n      for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n      }\n      return arr;\n    },\n    generateQuestionsResultsChart() {\n      /**\n       * Function to generate chart and update data (based on user results).\n       * Function shows ratio of correct to incorrect answers.\n       * Structure taken from the website 'chartjs.org'.\n       */\n\n          // find chart by id in html structure\n      const ctx = document.getElementById('myChartQuestionsResults');\n\n      // chart object\n      const myChartQuestionsResults = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['Correct answers', 'Wrong answers',],\n          datasets: [{\n            label: 'correct/incorrect answers',\n            data: [],\n            backgroundColor: [\n              'rgba(187, 247, 208, 0.5)',  // correct answers - green\n              'rgba(254, 202, 202, 0.5)',  // wrong answers - red\n            ],\n            borderColor: [\n              'rgba(187, 247, 208, 1)',  // correct answers - green\n              'rgba(254, 202, 202, 1)',  // wrong answers - red\n            ],\n            borderWidth: 1,\n            hoverOffset: 4,\n          }]\n        },\n        options: {\n          // responsive: true,\n          maintainAspectRatio: false,\n          // aspectRatio: 1\n          layout: {\n            padding: 20\n          }\n        }\n      });\n\n      // call chart object\n      myChartQuestionsResults;\n\n      //  update chart - fill chart arrays with data\n      myChartQuestionsResults.data.datasets[0].data.push(this.correctAnswers)  // correct answers\n      myChartQuestionsResults.data.datasets[0].data.push(this.wrongAnswers)  // wrong answers\n\n      // update chart - without this, data will not be saved in object\n      myChartQuestionsResults.update();\n    },\n    generateTimeResultsChart() {\n      /**\n       * Function to generate chart and update data (based on user results).\n       * Function shows time spent on each question.\n       * Structure taken from the website 'chartjs.org'.\n       */\n\n          // find chart by id in html structure\n      const ctx = document.getElementById('myChartTimeResults');\n\n      // chart object\n      const myChartTimeResults = new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: [],\n          datasets: [{\n            label: 'correct/incorrect answers',\n            data: [],\n            backgroundColor: [],\n            borderColor: [],\n            borderWidth: 1,\n            hoverOffset: 4,\n          }]\n        },\n        options: {\n          // responsive: true,\n          maintainAspectRatio: false,\n          // aspectRatio: 1\n          layout: {\n            padding: 4\n          }\n        }\n      });\n\n      // call chart object\n      myChartTimeResults;\n\n      // functions needed to generate random colors\n      const randomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\n      const randomByte = () => randomNumber(0, 255)\n\n      // save dictionary with amount of time spent for each question to local variable\n      let dict = this.timerQuestionDictionary;\n\n      //  update chart - fill chart arrays with data\n      Object.keys(dict).forEach(function (key) {\n        myChartTimeResults.data.labels.push(`question ${key}`);  // data\n        myChartTimeResults.data.datasets[0].data.push(dict[key]);  // labels\n        let color = `rgba(${[randomByte(), randomByte(), randomByte(), 0.2].join(',')})`  // set random color\n        myChartTimeResults.data.datasets[0].backgroundColor.push(color);  // push background color to array\n        myChartTimeResults.data.datasets[0].borderColor.push(color);  // push border color to array\n      })\n\n      // update chart - without this, data will not be saved in object\n      myChartTimeResults.update()\n    },\n    info() {\n      /**\n       * Function to show actual information in browser console.\n       */\n\n      console.log('*********************************')\n      console.log('selectedAnswer = ', this.selectedAnswer)\n      console.log('selectedAnswersDictionary = ', this.selectedAnswersDictionary)\n      console.log('questionIndex = ', this.questionIndex)\n      console.log('*********************************')\n    },\n  },\n  mounted() {\n    /**\n     * Function to show actual information in browser console when first view is loaded.\n     */\n    console.log('*********************************')\n    console.log('selectedAnswer = ', this.selectedAnswer)\n    console.log('selectedAnswersDictionary = ', this.selectedAnswersDictionary)\n    console.log('questionIndex = ', this.questionIndex)\n    console.log('*********************************')\n  },\n  updated: function () {\n    /**\n     * Function that is called whenever a new view appears in the browser - when new DOM elements are loaded.\n     */\n\n    this.$nextTick(function () {\n\n      // in order to prevent loading the charts after each change of view on the page, if function is used,\n      // so that the charts are loaded only after clicking Finish button and loading view with the results\n      if (this.startGenerateChart === true) {\n        this.generateQuestionsResultsChart();\n        this.generateTimeResultsChart();\n      }\n    })\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=bd492e92\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/maciej/projects/quiz_game_vue_deploy/quiz_game_vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './assets/tailwind.css'\nimport './assets/custom.css'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkquiz_game_vue\"] = self[\"webpackChunkquiz_game_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5536); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","id","width","height","_createElementBlock","$data","style","onClick","$options","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_10","_hoisted_12","length","innerHTML","question","_Fragment","_renderList","choices","answer","key","$event","onMouseover","onMouseout","_hoisted_16","_toDisplayString","disabled","undefined","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_25","_hoisted_26","_hoisted_27","correctAnswers","questionCounter","_hoisted_29","_hoisted_30","timerGlobalDelta","idx","correctAnswer","name","data","isHovering","selectedAnswer","selectedAnswersDictionary","questionIndex","widthProgress","wrongAnswers","timerGlobalStart","timerGlobalStop","timerStart","actualTime","timerDelta","timerQuestionDictionary","isStart","isFinish","questions","isLoading","isErrorDuringFetch","startGenerateChart","selectedNumberOfQuestions","methods","fetchData","params","URLSearchParams","append","this","toString","apiUrl","request","async","response","fetch","catch","error","console","log","status","json","results","prepareQuestions","err","i","dict","incorrect_answers","correct_answer","push","shuffle","Date","now","selectedAnswerFunction","event","target","innerText","updateProgressBar","hoverClassOn","classList","add","hoverClassOff","remove","nextQuestion","info","previousQuestion","showResults","Math","floor","Object","keys","timer","arr","j","random","generateQuestionsResultsChart","ctx","document","getElementById","myChartQuestionsResults","Chart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset","options","maintainAspectRatio","layout","padding","update","generateTimeResultsChart","myChartTimeResults","randomNumber","min","max","randomByte","forEach","color","join","mounted","updated","$nextTick","__exports__","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}